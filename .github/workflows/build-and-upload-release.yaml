name: Build and upload release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
  workflow_dispatch:
    ref:
      - main
      - dev

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-upload-release:
    name: Building and uploading release artifacts
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            executable_suffix: .exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          target: ${{ matrix.target }}
          profile: minimal

      - name: Build server executable
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Upload tagged version
        id: upload_tagged_version
        if: github.ref == 'v[0-9]+.[0-9]+.[0-9]+'
        uses: actions/upload-artifact@v2
        with:
          name: aoide_${{ matrix.target }}_${{ github.ref }}
          path: target/release/aoide${{ matrix.executable_suffix }}

      - name: Upload latest version
        id: upload_latest_version
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v2
        with:
          name: aoide_${{ matrix.target }}_latest
          path: target/release/aoide${{ matrix.executable_suffix }}

      - name: Upload latest development version
        id: upload_latest_version
        if: github.ref == 'refs/heads/dev'
        uses: actions/upload-artifact@v2
        with:
          name: aoide_dev_${{ matrix.target }}_latest
          path: target/release/aoide${{ matrix.executable_suffix }}
