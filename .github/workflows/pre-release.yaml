# SPDX-FileCopyrightText: Copyright (C) 2018-2025 Uwe Klotz <uwedotklotzatgmaildotcom> et al.
# SPDX-License-Identifier: CC0-1.0

# yaml-language-server: $schema=https://json.schemastore.org/github-workflow

# Same as file name
name: pre-release

on:
  push:
    tags:
      - "v[0-9]+*"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-upload-artifacts:
    strategy:
      matrix:
        build_package:
          - aoide-websrv
        build_profile:
          - production
        include:
          - target: aarch64-apple-darwin
            runner_os: macos-latest
            artifact_suffix: .tar.xz
          - target: x86_64-unknown-linux-musl
            runner_os: ubuntu-latest
            artifact_suffix: .tar.xz
          - target: x86_64-pc-windows-msvc
            runner_os: windows-latest
            artifact_suffix: .7z

    runs-on: ${{ matrix.runner_os }}

    steps:
      - name: Install dependencies for `musl libc` on Linux
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: >+
          sudo apt update && \
          sudo apt -y install \
          musl-tools

      # See also: <https://github.com/emilk/egui/blob/master/.github/workflows/rust.yml>
      - name: Install dependencies for `egui` on Linux
        if: runner.os == 'Linux'
        run: >+
          sudo apt update && \
          sudo apt -y install \
          libgtk-3-dev \
          libssl-dev \
          libxcb-render0-dev \
          libxcb-shape0-dev \
          libxcb-xfixes0-dev \
          libxkbcommon-dev

      # See also: <https://github.com/rusqlite/rusqlite/blob/master/.github/workflows/main.yml>
      - name: Add LLVM path on Windows
        if: runner.os == 'Windows'
        run: echo "C:\msys64\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      # Checkout the repository before the remaining steps that depend on it.
      # All preceding steps are independent of the repository contents.
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Cache Rust toolchain and build artifacts
        uses: Swatinem/rust-cache@v2
        with:
          # The cache should not be shared between different workflows and jobs.
          shared-key: ${{ github.workflow }}-${{ github.job }}

      - name: Build artifact
        run: cargo build --locked --target ${{ matrix.target }} --profile ${{ matrix.build_profile }} --package ${{ matrix.build_package }}

      - name: Prepare artifact on Linux/macOS
        if: runner.os != 'Windows'
        run: >+
          cd target/${{ matrix.target }}/${{ matrix.build_profile }}
          tar cJvf ../../../${{ matrix.build_package }}-${{ matrix.target }}${{ matrix.artifact_suffix }} ${{ matrix.build_package }}
          cd -
      - name: Prepare artifact on Windows
        if: runner.os == 'Windows'
        run: >+
          cd target/${{ matrix.target }}/${{ matrix.build_profile }}
          7z a ../../../${{ matrix.build_package }}-${{ matrix.target }}${{ matrix.artifact_suffix }} ${{ matrix.build_package }}.exe
          cd -

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.build_package }}-${{ matrix.target }}${{ matrix.artifact_suffix }}
          path: ${{ matrix.build_package }}-${{ matrix.target }}${{ matrix.artifact_suffix }}

  create-release-draft:
    needs: build-and-upload-artifacts
    if: startsWith(github.ref, 'refs/tags/v')

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Generate artifact checksums
        run: >-
          for file in ${{ matrix.build_package }}-*/${{ matrix.build_package }}-*;
          do
            openssl dgst -sha256 -r "$file" | awk '{print $1}' > "${file}.sha256";
          done

      - name: Extract release notes from changelog
        run: cat CHANGELOG.md | tail -n +7 | head -n 25 > RELEASE_NOTES.md

      - name: Create release draft
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ matrix.build_package }}-*/${{ matrix.build_package }}-*
          body_path: RELEASE_NOTES.md
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
