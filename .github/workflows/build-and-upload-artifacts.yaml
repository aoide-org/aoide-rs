name: Build and upload artifacts

on:
  release:
    types:
      - published
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-upload-artifacts:
    name: Building and uploading artifacts
    runs-on: ${{ matrix.runner_os }}
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc
        include:
          - target: x86_64-apple-darwin
            runner_os: macos-latest
          - target: x86_64-unknown-linux-musl
            runner_os: ubuntu-latest
          - target: x86_64-pc-windows-msvc
            runner_os: windows-latest
            executable_suffix: .exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install musl-tools on Linux
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt -y install musl-tools

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          target: ${{ matrix.target }}
          toolchain: stable
          profile: minimal

      - name: Build server executable
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --locked --target ${{ matrix.target }}

      - name: Upload tagged release artifact
        id: upload-tagged-release-artifact
        # Only triggered by version tags that start with 'v'
        if: startsWith(github.ref, 'refs/tags/v') && startsWith(github.event.release.tag_name, 'v')
        uses: actions/upload-artifact@v2
        with:
          # Artifact is stored and downloaded as .zip archive
          name: aoide_${{ github.event.release.tag_name }}_${{ matrix.target }}${{ matrix.executable_suffix }}
          path: target/${{ matrix.target }}/release/aoide${{ matrix.executable_suffix }}

      - name: Upload untagged artifact
        if: steps.upload-tagged-release-artifact.outcome == 'skipped'
        uses: actions/upload-artifact@v2
        with:
          # Artifact is stored and downloaded as .zip archive
          name: aoide_${{ github.sha }}_${{ matrix.target }}${{ matrix.executable_suffix }}
          path: target/${{ matrix.target }}/release/aoide${{ matrix.executable_suffix }}
