# SPDX-FileCopyrightText: Copyright (C) 2018-2022 Uwe Klotz <uwedotklotzatgmaildotcom> et al.
# SPDX-License-Identifier: AGPL-3.0-or-later

[package]
name = "aoide-websrv"
description = "aoide - Standalone web server with embedded SQLite database"
keywords = ["music", "collection"]
version.workspace = true
license.workspace = true
edition.workspace = true
rust-version.workspace = true
publish = false

[dependencies]
anyhow = "1.0.66"
ctrlc = { version = "3.2.4", features = ["termination"] }
directories = "4.0.1"
discro = { version = "0.8.0", features = ["tokio"] }
dotenv = "0.15.0"
log = { version = "0.4.17", features = ["release_max_level_debug"] }
parking_lot = "0.12.1"
ron = "0.8.0"
serde = { version = "1.0.149", features = ["derive"] }
serde_json = "1.0.89"
thiserror = "1.0.37"
time = { version = "0.3.17", features = ["serde-human-readable"] }
tokio = { version = "1.23.0", default-features = false, features = [
    "rt-multi-thread",
    "signal",
] }
tracing = "0.1.37"
tracing-log = "0.1.3"
tracing-subscriber = { version = "0.3.16", features = ["env-filter"] }
url = { version = "2.3.1", features = ["serde"] }
warp = { version = "0.3.3", default-features = false }

# schemars
schemars = { version = "0.8.11", optional = true }

# webapp
mime_guess = { version = "2.0.4", optional = true }
rust-embed = { version = "6.4.2", optional = true }

# launcher-ui
eframe = { version = "0.20.1", optional = true, default-features = false, features = [
    "default_fonts",
    "glow",
] }
egui = { version = "0.20.1", optional = true, default-features = false }
rfd = { version = "0.10.0", optional = true, default-features = false, features = [
    "xdg-portal",
] }

# Workspace dependencies
aoide-backend-webapi-json = "=0.8.0"
aoide-core = { version = "=0.8.0", features = ["serde"] }
aoide-repo-sqlite = "=0.8.0"
aoide-storage-sqlite = { version = "=0.8.0", features = ["serde", "tokio"] }
aoide-usecases = "=0.8.0"
aoide-usecases-sqlite = "=0.8.0"
aoide-websrv-warp-sqlite = "=0.8.0"

[features]
default = ["json-schema", "launcher-ui"]
json-schema = [
    "schemars",
    "aoide-core/json-schema",
    "aoide-backend-webapi-json/json-schema",
]
launcher-ui = ["eframe", "egui", "rfd"]
# Experimental: The webapp has to be built separately and its
# build artifacts are expected in ../webapp/dist to be embedded.
webapp = ["mime_guess", "rust-embed"]
